module Main exposing (main)

-- This is generated in the build step
import Gen.Components.Counter as Counter
import Gen.Components.Table as Table

import Task exposing (Task)
import Transmutable.Html as H exposing (Html)
import Node exposing (Environment)
import Prettynice
import Prettynice.Request exposing (Request)
import Prettynice.Response as Response exposing (Response)


main : Prettynice.Program Model {}
main =
    Prettynice.defineProgram
        { init = init
        , router = router
        }


type alias Model = {}


init : Environment -> Prettynice.Init Model {}
init env =
    Prettynice.startProgram
        { host = "127.0.0.1"
        , port_ = 3000
        , env = env
        , model = {}
        }


router : Model -> Request -> Response -> Task Never Response
router model request response =
    response
        |> Response.asHtml
            { title = "Component Example"
            , head = []
            , body =
                [ H.p [] [ H.text "Client-side components embedded in server-rendered HTML:" ]
                , Counter.init { start = 0 }
                , H.p [] [ H.text "Multiple instances of the same component with different flags, passed from the server, automatically encoded, and type-checked at compile time:" ]
                , Counter.init { start = 123 }
                , H.p [] [ H.text "Components with props that use recursive types (Array and Maybe):" ]
                , Table.init
                    { title = Just "My Numbers"
                    , rows = 
                        [ [ 5, 8, 1, 2 ]
                        , [ 3, 1, 2, 6 ]
                        , [ 8, 9, 0, 1 ]
                        ]
                    }
                ]
            }
        |> Task.succeed
